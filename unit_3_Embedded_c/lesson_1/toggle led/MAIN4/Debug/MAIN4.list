
MAIN4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .init         0000000c  00008000  00008000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000026a  0000800c  0000800c  0000800c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fini         0000000c  00008278  00008278  00008278  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000004  00008284  00008284  00008284  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.exidx    00000008  00008288  00008288  00008288  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .eh_frame     00000004  00008290  00008290  00008290  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .init_array   00000004  00018294  00018294  00008294  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  00018298  00018298  00008298  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000060  0001829c  0001829c  0000829c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  000182fc  000182fc  000082fc  2**2
                  ALLOC
 10 .comment      0000007b  00000000  00000000  000082fc  2**0
                  CONTENTS, READONLY
 11 .debug_aranges 00000020  00000000  00000000  00008377  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_info   000000cc  00000000  00000000  00008397  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000077  00000000  00000000  00008463  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   000004a5  00000000  00000000  000084da  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000000c4  00000000  00000000  00008980  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00003a77  00000000  00000000  00008a44  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00000010  00000000  00000000  0000c4bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_macro  00000ef0  00000000  00000000  0000c4cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .ARM.attributes 0000002b  00000000  00000000  0000d3bb  2**0
                  CONTENTS, READONLY

Disassembly of section .init:

00008000 <_init>:
    8000:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8002:	46c0      	nop			; (mov r8, r8)
    8004:	bcf8      	pop	{r3, r4, r5, r6, r7}
    8006:	bc08      	pop	{r3}
    8008:	469e      	mov	lr, r3
    800a:	4770      	bx	lr

Disassembly of section .text:

0000800c <exit>:
    800c:	4b08      	ldr	r3, [pc, #32]	; (8030 <exit+0x24>)
    800e:	b510      	push	{r4, lr}
    8010:	0004      	movs	r4, r0
    8012:	2b00      	cmp	r3, #0
    8014:	d002      	beq.n	801c <exit+0x10>
    8016:	2100      	movs	r1, #0
    8018:	e000      	b.n	801c <exit+0x10>
    801a:	bf00      	nop
    801c:	4b05      	ldr	r3, [pc, #20]	; (8034 <exit+0x28>)
    801e:	6818      	ldr	r0, [r3, #0]
    8020:	6a83      	ldr	r3, [r0, #40]	; 0x28
    8022:	2b00      	cmp	r3, #0
    8024:	d001      	beq.n	802a <exit+0x1e>
    8026:	f000 f807 	bl	8038 <exit+0x2c>
    802a:	0020      	movs	r0, r4
    802c:	f000 f922 	bl	8274 <_exit>
    8030:	00000000 	.word	0x00000000
    8034:	00008284 	.word	0x00008284
    8038:	4718      	bx	r3
    803a:	46c0      	nop			; (mov r8, r8)

0000803c <__do_global_dtors_aux>:
    803c:	b510      	push	{r4, lr}
    803e:	4c07      	ldr	r4, [pc, #28]	; (805c <__do_global_dtors_aux+0x20>)
    8040:	7823      	ldrb	r3, [r4, #0]
    8042:	2b00      	cmp	r3, #0
    8044:	d107      	bne.n	8056 <__do_global_dtors_aux+0x1a>
    8046:	4b06      	ldr	r3, [pc, #24]	; (8060 <__do_global_dtors_aux+0x24>)
    8048:	2b00      	cmp	r3, #0
    804a:	d002      	beq.n	8052 <__do_global_dtors_aux+0x16>
    804c:	4805      	ldr	r0, [pc, #20]	; (8064 <__do_global_dtors_aux+0x28>)
    804e:	e000      	b.n	8052 <__do_global_dtors_aux+0x16>
    8050:	bf00      	nop
    8052:	2301      	movs	r3, #1
    8054:	7023      	strb	r3, [r4, #0]
    8056:	bc10      	pop	{r4}
    8058:	bc01      	pop	{r0}
    805a:	4700      	bx	r0
    805c:	000182fc 	.word	0x000182fc
    8060:	00000000 	.word	0x00000000
    8064:	00008290 	.word	0x00008290

00008068 <frame_dummy>:
    8068:	4b05      	ldr	r3, [pc, #20]	; (8080 <frame_dummy+0x18>)
    806a:	b510      	push	{r4, lr}
    806c:	2b00      	cmp	r3, #0
    806e:	d003      	beq.n	8078 <frame_dummy+0x10>
    8070:	4904      	ldr	r1, [pc, #16]	; (8084 <frame_dummy+0x1c>)
    8072:	4805      	ldr	r0, [pc, #20]	; (8088 <frame_dummy+0x20>)
    8074:	e000      	b.n	8078 <frame_dummy+0x10>
    8076:	bf00      	nop
    8078:	bc10      	pop	{r4}
    807a:	bc01      	pop	{r0}
    807c:	4700      	bx	r0
    807e:	46c0      	nop			; (mov r8, r8)
    8080:	00000000 	.word	0x00000000
    8084:	00018300 	.word	0x00018300
    8088:	00008290 	.word	0x00008290

0000808c <_mainCRTStartup>:
    808c:	e59f30d8 	ldr	r3, [pc, #216]	; 816c <change_back+0x8>
    8090:	e3530000 	cmp	r3, #0
    8094:	059f30cc 	ldreq	r3, [pc, #204]	; 8168 <change_back+0x4>
    8098:	e1a0d003 	mov	sp, r3
    809c:	e10f2000 	mrs	r2, CPSR
    80a0:	e312000f 	tst	r2, #15
    80a4:	0a000015 	beq	8100 <_mainCRTStartup+0x74>
    80a8:	e321f0d1 	msr	CPSR_c, #209	; 0xd1
    80ac:	e1a0d003 	mov	sp, r3
    80b0:	e24daa01 	sub	sl, sp, #4096	; 0x1000
    80b4:	e1a0300a 	mov	r3, sl
    80b8:	e321f0d7 	msr	CPSR_c, #215	; 0xd7
    80bc:	e1a0d003 	mov	sp, r3
    80c0:	e2433a01 	sub	r3, r3, #4096	; 0x1000
    80c4:	e321f0db 	msr	CPSR_c, #219	; 0xdb
    80c8:	e1a0d003 	mov	sp, r3
    80cc:	e2433a01 	sub	r3, r3, #4096	; 0x1000
    80d0:	e321f0d2 	msr	CPSR_c, #210	; 0xd2
    80d4:	e1a0d003 	mov	sp, r3
    80d8:	e2433a02 	sub	r3, r3, #8192	; 0x2000
    80dc:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
    80e0:	e1a0d003 	mov	sp, r3
    80e4:	e2433902 	sub	r3, r3, #32768	; 0x8000
    80e8:	e3c330ff 	bic	r3, r3, #255	; 0xff
    80ec:	e3c33cff 	bic	r3, r3, #65280	; 0xff00
    80f0:	e5033004 	str	r3, [r3, #-4]
    80f4:	e9532000 	ldmdb	r3, {sp}^
    80f8:	e38220c0 	orr	r2, r2, #192	; 0xc0
    80fc:	e121f002 	msr	CPSR_c, r2
    8100:	e243a801 	sub	sl, r3, #65536	; 0x10000
    8104:	e3b01000 	movs	r1, #0
    8108:	e1a0b001 	mov	fp, r1
    810c:	e1a07001 	mov	r7, r1
    8110:	e59f0060 	ldr	r0, [pc, #96]	; 8178 <change_back+0x14>
    8114:	e59f2060 	ldr	r2, [pc, #96]	; 817c <change_back+0x18>
    8118:	e0522000 	subs	r2, r2, r0
    811c:	e28f3001 	add	r3, pc, #1
    8120:	e12fff13 	bx	r3

00008124 <__change_mode>:
    8124:	f000 f89e 	bl	8264 <memset>
    8128:	4b11      	ldr	r3, [pc, #68]	; (8170 <change_back+0xc>)
    812a:	2b00      	cmp	r3, #0
    812c:	d001      	beq.n	8132 <__change_mode+0xe>
    812e:	46fe      	mov	lr, pc
    8130:	469f      	mov	pc, r3
    8132:	4b10      	ldr	r3, [pc, #64]	; (8174 <change_back+0x10>)
    8134:	2b00      	cmp	r3, #0
    8136:	d001      	beq.n	813c <__change_mode+0x18>
    8138:	46fe      	mov	lr, pc
    813a:	469f      	mov	pc, r3
    813c:	2000      	movs	r0, #0
    813e:	2100      	movs	r1, #0
    8140:	0004      	movs	r4, r0
    8142:	000d      	movs	r5, r1
    8144:	480e      	ldr	r0, [pc, #56]	; (8180 <change_back+0x1c>)
    8146:	2800      	cmp	r0, #0
    8148:	d002      	beq.n	8150 <__change_mode+0x2c>
    814a:	480e      	ldr	r0, [pc, #56]	; (8184 <change_back+0x20>)
    814c:	e000      	b.n	8150 <__change_mode+0x2c>
    814e:	bf00      	nop
    8150:	f000 f85e 	bl	8210 <__libc_init_array>
    8154:	0020      	movs	r0, r4
    8156:	0029      	movs	r1, r5
    8158:	f000 f816 	bl	8188 <main>
    815c:	f7ff ff56 	bl	800c <exit>
    8160:	467b      	mov	r3, pc
    8162:	4718      	bx	r3

00008164 <change_back>:
    8164:	ef000011 	svc	0x00000011
    8168:	00080000 	.word	0x00080000
	...
    8178:	000182fc 	.word	0x000182fc
    817c:	00018318 	.word	0x00018318
	...

00008188 <main>:

#define RCC_APB2ENR *(volatile uint32_t *) (RCC_BASE + 0x18)
#define GPIOA_CRH *(volatile uint32_t *) (portA_BASE + 0x04)
#define GPIOA_ODR *(volatile uint32_t *) (RCC_BASE + 0x0C)

int main(void){
    8188:	b580      	push	{r7, lr}
    818a:	b082      	sub	sp, #8
    818c:	af00      	add	r7, sp, #0

 RCC_APB2ENR |= 1<<2;
    818e:	4b1b      	ldr	r3, [pc, #108]	; (81fc <main+0x74>)
    8190:	681a      	ldr	r2, [r3, #0]
    8192:	4b1a      	ldr	r3, [pc, #104]	; (81fc <main+0x74>)
    8194:	2104      	movs	r1, #4
    8196:	430a      	orrs	r2, r1
    8198:	601a      	str	r2, [r3, #0]
 GPIOA_CRH &= 0xff0fffff;
    819a:	4b19      	ldr	r3, [pc, #100]	; (8200 <main+0x78>)
    819c:	681a      	ldr	r2, [r3, #0]
    819e:	4b18      	ldr	r3, [pc, #96]	; (8200 <main+0x78>)
    81a0:	4918      	ldr	r1, [pc, #96]	; (8204 <main+0x7c>)
    81a2:	400a      	ands	r2, r1
    81a4:	601a      	str	r2, [r3, #0]
 GPIOA_CRH |= 0x00200000;
    81a6:	4b16      	ldr	r3, [pc, #88]	; (8200 <main+0x78>)
    81a8:	681a      	ldr	r2, [r3, #0]
    81aa:	4b15      	ldr	r3, [pc, #84]	; (8200 <main+0x78>)
    81ac:	2180      	movs	r1, #128	; 0x80
    81ae:	0389      	lsls	r1, r1, #14
    81b0:	430a      	orrs	r2, r1
    81b2:	601a      	str	r2, [r3, #0]
 while (1)
 {
	 GPIOA_ODR |= 1<<13;
    81b4:	4b14      	ldr	r3, [pc, #80]	; (8208 <main+0x80>)
    81b6:	681a      	ldr	r2, [r3, #0]
    81b8:	4b13      	ldr	r3, [pc, #76]	; (8208 <main+0x80>)
    81ba:	2180      	movs	r1, #128	; 0x80
    81bc:	0189      	lsls	r1, r1, #6
    81be:	430a      	orrs	r2, r1
    81c0:	601a      	str	r2, [r3, #0]
	 for (int i=0; i<500;i++);
    81c2:	2300      	movs	r3, #0
    81c4:	607b      	str	r3, [r7, #4]
    81c6:	e002      	b.n	81ce <main+0x46>
    81c8:	687b      	ldr	r3, [r7, #4]
    81ca:	3301      	adds	r3, #1
    81cc:	607b      	str	r3, [r7, #4]
    81ce:	687a      	ldr	r2, [r7, #4]
    81d0:	23f4      	movs	r3, #244	; 0xf4
    81d2:	33ff      	adds	r3, #255	; 0xff
    81d4:	429a      	cmp	r2, r3
    81d6:	ddf7      	ble.n	81c8 <main+0x40>
	 GPIOA_ODR &= ~(1<<13);
    81d8:	4b0b      	ldr	r3, [pc, #44]	; (8208 <main+0x80>)
    81da:	681a      	ldr	r2, [r3, #0]
    81dc:	4b0a      	ldr	r3, [pc, #40]	; (8208 <main+0x80>)
    81de:	490b      	ldr	r1, [pc, #44]	; (820c <main+0x84>)
    81e0:	400a      	ands	r2, r1
    81e2:	601a      	str	r2, [r3, #0]
	 for (int i=0; i<500;i++);
    81e4:	2300      	movs	r3, #0
    81e6:	603b      	str	r3, [r7, #0]
    81e8:	e002      	b.n	81f0 <main+0x68>
    81ea:	683b      	ldr	r3, [r7, #0]
    81ec:	3301      	adds	r3, #1
    81ee:	603b      	str	r3, [r7, #0]
    81f0:	683a      	ldr	r2, [r7, #0]
    81f2:	23f4      	movs	r3, #244	; 0xf4
    81f4:	33ff      	adds	r3, #255	; 0xff
    81f6:	429a      	cmp	r2, r3
    81f8:	ddf7      	ble.n	81ea <main+0x62>
	 GPIOA_ODR |= 1<<13;
    81fa:	e7db      	b.n	81b4 <main+0x2c>
    81fc:	40021018 	.word	0x40021018
    8200:	40010804 	.word	0x40010804
    8204:	ff0fffff 	.word	0xff0fffff
    8208:	4002100c 	.word	0x4002100c
    820c:	ffffdfff 	.word	0xffffdfff

00008210 <__libc_init_array>:
    8210:	b570      	push	{r4, r5, r6, lr}
    8212:	2600      	movs	r6, #0
    8214:	4d0e      	ldr	r5, [pc, #56]	; (8250 <__libc_init_array+0x40>)
    8216:	4c0f      	ldr	r4, [pc, #60]	; (8254 <__libc_init_array+0x44>)
    8218:	1b64      	subs	r4, r4, r5
    821a:	10a4      	asrs	r4, r4, #2
    821c:	42a6      	cmp	r6, r4
    821e:	d10b      	bne.n	8238 <__libc_init_array+0x28>
    8220:	2600      	movs	r6, #0
    8222:	f7ff feed 	bl	8000 <_init>
    8226:	4d0c      	ldr	r5, [pc, #48]	; (8258 <__libc_init_array+0x48>)
    8228:	4c0c      	ldr	r4, [pc, #48]	; (825c <__libc_init_array+0x4c>)
    822a:	1b64      	subs	r4, r4, r5
    822c:	10a4      	asrs	r4, r4, #2
    822e:	42a6      	cmp	r6, r4
    8230:	d108      	bne.n	8244 <__libc_init_array+0x34>
    8232:	bc70      	pop	{r4, r5, r6}
    8234:	bc01      	pop	{r0}
    8236:	4700      	bx	r0
    8238:	00b3      	lsls	r3, r6, #2
    823a:	58eb      	ldr	r3, [r5, r3]
    823c:	f000 f810 	bl	8260 <__libc_init_array+0x50>
    8240:	3601      	adds	r6, #1
    8242:	e7eb      	b.n	821c <__libc_init_array+0xc>
    8244:	00b3      	lsls	r3, r6, #2
    8246:	58eb      	ldr	r3, [r5, r3]
    8248:	f000 f80a 	bl	8260 <__libc_init_array+0x50>
    824c:	3601      	adds	r6, #1
    824e:	e7ee      	b.n	822e <__libc_init_array+0x1e>
    8250:	00018294 	.word	0x00018294
    8254:	00018294 	.word	0x00018294
    8258:	00018294 	.word	0x00018294
    825c:	00018298 	.word	0x00018298
    8260:	4718      	bx	r3
    8262:	46c0      	nop			; (mov r8, r8)

00008264 <memset>:
    8264:	0003      	movs	r3, r0
    8266:	1812      	adds	r2, r2, r0
    8268:	4293      	cmp	r3, r2
    826a:	d100      	bne.n	826e <memset+0xa>
    826c:	4770      	bx	lr
    826e:	7019      	strb	r1, [r3, #0]
    8270:	3301      	adds	r3, #1
    8272:	e7f9      	b.n	8268 <memset+0x4>

00008274 <_exit>:
    8274:	e7fe      	b.n	8274 <_exit>

Disassembly of section .fini:

00008278 <_fini>:
    8278:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    827a:	46c0      	nop			; (mov r8, r8)
    827c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    827e:	bc08      	pop	{r3}
    8280:	469e      	mov	lr, r3
    8282:	4770      	bx	lr
